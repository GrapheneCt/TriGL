attribute vec3 a_Color;
attribute vec3 a_Normal;
attribute vec4 a_Position;

uniform vec3 u_LightColor;
uniform vec3 u_LightDirection;
uniform vec3 u_AmbientLight;

uniform mat4 u_pMatrix;
uniform mat4 u_vMatrix;
uniform mat4 u_mvMatrix;

varying highp vec4 v_Color;

void main(void) {
    gl_Position = u_pMatrix * u_vMatrix * u_mvMatrix * a_Position;

    vec3 normal = normalize(a_Normal - vec3(gl_Position));
    float nDotL = max(dot(u_LightDirection, normal), 0.0);

    vec3 diffuse = u_LightColor * a_Color.rgb * nDotL;
    vec3 ambient = u_AmbientLight * a_Color.rgb;
    v_Color = vec4(diffuse + ambient, 1.0);
}